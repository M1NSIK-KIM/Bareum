# Generated by Django 4.2.1 on 2023-06-15 06:36

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("account", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Company",
            fields=[
                ("company_id", models.IntegerField(primary_key=True, serialize=False)),
                (
                    "company_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
            ],
            options={
                "db_table": "company",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Ingredient",
            fields=[
                (
                    "ingredient_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
            ],
            options={
                "db_table": "ingredient",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Nutraceuticals",
            fields=[
                (
                    "nutraceuticals_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("nutraceuticals_name", models.CharField(max_length=100)),
                ("nutraceuticals_categroy", models.CharField(max_length=1)),
                ("nutraceuticals_rating", models.IntegerField()),
                ("nutraceuticals_effects", models.CharField(max_length=100)),
                ("nutraceuticals_side_effects", models.CharField(max_length=100)),
                ("nutraceuticals_company", models.CharField(max_length=100)),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="product.company",
                    ),
                ),
                (
                    "ingredient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="product.ingredient",
                    ),
                ),
            ],
            options={
                "db_table": "nutraceuticals",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="UserReview",
            fields=[
                (
                    "user_review_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("review_rating", models.IntegerField()),
                ("review_contents", models.CharField(max_length=500)),
                (
                    "nutraceuticals",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="product.nutraceuticals",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="account.user",
                    ),
                ),
            ],
            options={
                "db_table": "user_review",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="OnelineReview",
            fields=[
                (
                    "online_review_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("review_rating", models.IntegerField()),
                ("review_contents", models.CharField(max_length=500)),
                (
                    "nutraceuticals",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="product.nutraceuticals",
                    ),
                ),
            ],
            options={
                "db_table": "oneline_review",
                "managed": True,
            },
        ),
    ]
